// https://school.programmers.co.kr/learn/courses/30/lessons/12981

// 말했던 단어를 담는 String[]를 새로 만들어서 Arrays의 메소드 asList와 contains을 이용해 중복인지 체크.
// (Arrays.asList(배열)는 배열을 ArrayList로 리턴시킴. 따라서 ArrayList<String>으로 선언하여 add시켜 contains를 이용해 중복확인도 가능.)
// 이전 단어의 끝 문자열과 이후 단어의 첫 문자열을 비교
// 몫과 나머지로 결과값에 맞게 도출하여 해결.

import java.util.*;

class Solution {
    public int[] solution(int n, String[] words) {
        int[] answer = {0, 0};
        int order = 2;
        String[] double_words = new String[words.length];
        double_words[0] = words[0];
        for(int i=1; i<words.length; i++){
            if(Arrays.asList(double_words).contains(words[i]) || words[i-1].charAt(words[i-1].length()-1) != words[i].charAt(0)){
                answer[0] = (order%n)==0 ? n : order%n;
                answer[1] = ((order%n)==0 ? order/n : (order/n)+1);
                break;
            }
            order++;
            double_words[i] = words[i];
        }
        return answer;
    }
}